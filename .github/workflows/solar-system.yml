name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'


env:
   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: 'superuser'
   MONGO_PASSWORD: 'SuperPassword'


jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            nodejs_version: [18,19]
            operating_systems: [ubuntu-latest,macos-latest]
            exclude:
                - nodejs_version: 18
                  operating_systems: macos-latest



        runs-on: ${{matrix.operating_systems}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 21

 
        - name: Dependancies cache
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-${{steps.get-date.outputs.date}}-ModeModules-${{ hashFiles('package-lock.json') }}


          
        - name: Install Dependencies
          run: | 
                npm install --no-audit
                npm install mongoose@6.13.8 
                npm audit fix
                npm install --global yarn

        - name: Unit Testing
          run: npm test  --verbose
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-test-result
            path: test-results.xml

    code-coverage:
        name: code-coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 21
       
        - name: Dependancies cache
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-${{steps.get-date.outputs.date}}-ModeModules-${{ hashFiles('package-lock.json') }}





        - name: Install Dependencies
          run:  npm install

        - name: code coverage
          continue-on-error: true
          run: npm run coverage 
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: code-coverage-result
            path: result.tar.gz
            if-no-files-found: warn
            overwrite: true
            include-hidden-files: true



    Docker-login: 
        name: Docker login
        needs : [unit-testing,code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Login Docker 
          uses: docker/login-action@v3
          with:
           username: ${{ vars.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
              context: .
              push: false
              tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

        - name: Docker Image testing 
          run : |
               docker images 
              #  docker run --name solar-system-app -d -p 3000:3000 -e MONGO_URI= ${{env.MONGO_URI}} -e MONGO_USERNAME = ${{env.MONGO_USERNAME}} -e MONGO_PASSWORD = ${{env.MONGO_PASSWORD}} ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

               export IP = $( docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system)


                echo $IP
                echo testing image
                wget -q -o 127.0.0.1:3000/live | grep live 

          



  