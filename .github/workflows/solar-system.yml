name: Solar Systems Workflow
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
  MONGO_URI: mongodb+srv://${{vars.MONGO_USERNAME}}:${{secrets.MONGO_PASSWORD}}@cluster0.h87iivl.mongodb.net/solar_system?retryWrites=true&w=majority&appName=Cluster0
jobs:
  unit-testing:
    services:
      mongo-db:
        image: mongo:6.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: non-prod-user
          MONGO_INITDB_ROOT_PASSWORD: non-prod-password
    env:
      MONGO_URI: mongodb://nonproduser:nonprodpassword@localhost:27017/solar_system
      MONGO_USERNAME: non-prod-user
      MONGO_PASSWORD: non-prod-password
    strategy:
      matrix:
        nodejs_version: [18, 20]
        operating_system: [ubuntu-latest]
        exlude:
          - nodejs_version: 18
            operating_system: macos-latest

    name: Unit Testing
    runs-on: ${{matrix.operating_system}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      
      - name: Setup NodeJS Version - ${{matrix.nodejs_version}}
        uses: actions/setup-node@v5
        with: 
          node-version: ${{matrix.nodejs_version}}

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}

  
      - name: Install all Dependencies
        run: npm install
      
      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test 
      - name: Archive Test Result
        if : always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result-${{ github.job }}-${{ matrix.nodejs_version }}-${{ matrix.operating_system }}-${{ github.run_number }}
          path: test-results.xml
  
  code-coverage:

    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: checkout Repository
        uses: actions/checkout@v5
      
      - name: Setup NodeJs Version - 18
        uses: actions/setup-node@v5
        with:
          node-version: 18

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}

      - name: Install Dependencies
        run: npm install 

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
  
  docker:
    name: containerization
    runs-on: ubuntu-latest
    needs: [unit-testing, code-coverage]
    permissions: 
      packages: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v5
      
      - name: Dockerhub Login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: GHCR Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Docker build for testing
        uses: docker/build-push-action@v6
        with:
          push: false
          context: .
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{github.sha}}
      - name: Docker Image Test
        run: |
          docker images
          docker run --name solar-system-app -d \
          -p 3000:3000 \
          -e MONGO_URI=$MONGO_URI \
          -e MONGO_USERNAME=$MONGO_USERNAME \
          -e MONGO_PASSWORD=$MONGO_PASSWORD \
          ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
  
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo "Adresse IP du conteneur : $IP"
          echo Test URL using wget
          wget -q -O - 127.0.0.1:3000/live | grep live
    
      - name: Normalize repo owner
        id: vars
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      - name: Container Registry Push for Git Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
            ghcr.io/${{steps.vars.outputs.owner}}/solar-system:${{ github.sha }}


