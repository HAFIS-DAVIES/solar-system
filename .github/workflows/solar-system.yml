name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main

env:
  MONGO_URL: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MOBGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test 

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: test-results
            path:  test-results.xml
    docker:
        name: Docker Build
        needs: [unit-testing]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install

        - name: Build Docker Image
          run: docker build -t solar-system .
    
        - name: Push Docker Image
          run: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker tag solar-system ${{ secrets.DOCKER_USERNAME }}/solar-system
            docker push ${{ secrets.DOCKER_USERNAME }}/solar-system

    deploy:
        name: Deploy to EC2
        runs-on: ubuntu-latest
        needs: [docker]
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4
    
          - name: SSH into EC2 and Deploy
            uses: appleboy/ssh-action@v0.1.10
            with:
              host: ${{ secrets.EC2_HOST }}
              username: ec2-user
              key: ${{ secrets.EC2_SSH_KEY }}
              script: |
                docker stop solar-system || true
                docker rm solar-system || true
                docker pull ${{ secrets.DOCKER_USERNAME }}/solar-system:latest
                docker run -d -p 8080:3000 --name solar-system ${{ secrets.DOCKER_USERNAME }}/solar-system:latest