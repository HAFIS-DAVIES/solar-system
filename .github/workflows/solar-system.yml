name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://yagen1111:<db_password>@cluster0.uw8v3gr.mongodb.net/superData
  MONGO_USERNAME: yagen1111
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    
    # unit-testing:
    #     name: Unit Testing
    #     runs-on: ubuntu-latest
    #     steps:
    #     - name: Checkout Repository
    #       uses: actions/checkout@v4

    #     - name: Setup NodeJS Version
    #       uses: actions/setup-node@v3
    #       with:
    #         node-version: 20
    #     - name: Cache Node Modules
    #       uses: actions/cache@v4
    #       with:
    #         path: node_modules
    #         key: ${{ runner.os }}-node-modules${{ hashFiles('package-lock.json') }} 

    
    #     - name: Install Dependencies
    #       run: npm install
    
    #     - name: Unit Testing
    #       id: nodejs-unit-test-step
    #       run: npm test
          
          
    #     - name: Archive Test Result
    #       if: always()
    #       uses: actions/upload-artifact@v4
    #       with:
    #         name: Mocha-Test-Result
    #         path: test-results.xml
    # code-coverage:


    #  needs: unit-testing
    #  name: Code Coverage
    #  runs-on: ubuntu-latest
     
    #  steps:
    #  - name: Checkout Repository
    #    uses: actions/checkout@v4

    #  - name: Setup NodeJS Version
    #    uses: actions/setup-node@v3
    #    with:
    #      node-version: 20

    #  - name: Install Dependencies
    #    run: npm install
    #  - name: Cache Node Modules
    #    uses: actions/cache@v4
    #    with:
    #     path: node_modules
    #     key: ${{ runner.os }}-node-modules${{ hashFiles('package-lock.json') }} 

    
    #  - name: Run Code Coverage
    #    continue-on-error: true
    #    run: npm run coverage


    #  - name: Upload Code Coverage Report
    #    uses: actions/upload-artifact@v4
    #    with:
    #      name: Code-Coverage-Report
    #      path: coverage
    #      retention-days: 5
    docker:
      needs: [unit-testing, code-coverage]
      name: Docker Build and Push
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

      - name: image test
        run: |
          docker images
          docker run --name solar-system-test -d \
           -p 3000:3000 \
           -e MONGO_URI=$MOMONGO_URI\
           -e MONGO_USERNAME=$MONGO_USERNAME\
           -e MONGO_PASSWORD=$MONGO_PASSWORD \
           ${{ secrets.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
          export ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-test)
          echo "IP Address: $ip"

          echo "Waiting for the application to start..."
          wget -q -o - 127.0.0.1:3000/live | grep live